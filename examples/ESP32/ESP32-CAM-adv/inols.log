






Started logging.

<<<
Content-Length: 3162

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":1516,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Dati\\Cloud\\Dropbox\\ArduinoLibs\\AsyncTelegram2\\examples\\ESP32\\ESP32-CAM-adv","rootUri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv","name":"ESP32-CAM-adv"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 10575

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/camera_pins.h","languageId":"cpp","version":1,"text":"\r\n// Select camera model\r\n//#define CAMERA_MODEL_WROVER_KIT\r\n//#define CAMERA_MODEL_ESP_EYE\r\n//#define CAMERA_MODEL_M5STACK_PSRAM\r\n//#define CAMERA_MODEL_M5STACK_V2_PSRAM\r\n//#define CAMERA_MODEL_M5STACK_WIDE\r\n//#define CAMERA_MODEL_M5STACK_ESP32CAM\r\n#define CAMERA_MODEL_AI_THINKER\r\n//#define CAMERA_MODEL_TTGO_T_JOURNAL\r\n\r\n#if defined(CAMERA_MODEL_WROVER_KIT)\r\n  //\r\n  // ESP WROVER\r\n  // https://dl.espressif.com/dl/schematics/ESP-WROVER-KIT_SCH-2.pdf\r\n  //\r\n  #define PWDN_GPIO_NUM    -1\r\n  #define RESET_GPIO_NUM   -1\r\n  #define XCLK_GPIO_NUM    21\r\n  #define SIOD_GPIO_NUM    26\r\n  #define SIOC_GPIO_NUM    27\r\n  #define Y9_GPIO_NUM      35\r\n  #define Y8_GPIO_NUM      34\r\n  #define Y7_GPIO_NUM      39\r\n  #define Y6_GPIO_NUM      36\r\n  #define Y5_GPIO_NUM      19\r\n  #define Y4_GPIO_NUM      18\r\n  #define Y3_GPIO_NUM       5\r\n  #define Y2_GPIO_NUM       4\r\n  #define VSYNC_GPIO_NUM   25\r\n  #define HREF_GPIO_NUM    23\r\n  #define PCLK_GPIO_NUM    22\r\n  #define LED_PIN           2 // A status led on the RGB; could also use pin 0 or 4\r\n  #define LED_ON         HIGH //\r\n  #define LED_OFF         LOW //\r\n  // #define LAMP_PIN          x // No LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_ESP_EYE)\r\n  //\r\n  // ESP-EYE\r\n  // https://twitter.com/esp32net/status/1085488403460882437\r\n  #define PWDN_GPIO_NUM    -1\r\n  #define RESET_GPIO_NUM   -1\r\n  #define XCLK_GPIO_NUM     4\r\n  #define SIOD_GPIO_NUM    18\r\n  #define SIOC_GPIO_NUM    23\r\n  #define Y9_GPIO_NUM      36\r\n  #define Y8_GPIO_NUM      37\r\n  #define Y7_GPIO_NUM      38\r\n  #define Y6_GPIO_NUM      39\r\n  #define Y5_GPIO_NUM      35\r\n  #define Y4_GPIO_NUM      14\r\n  #define Y3_GPIO_NUM      13\r\n  #define Y2_GPIO_NUM      34\r\n  #define VSYNC_GPIO_NUM    5\r\n  #define HREF_GPIO_NUM    27\r\n  #define PCLK_GPIO_NUM    25\r\n  #define LED_PIN          21 // Status led\r\n  #define LED_ON         HIGH //\r\n  #define LED_OFF         LOW //\r\n  // #define LAMP_PIN          x // No LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_M5STACK_PSRAM)\r\n  //\r\n  // ESP32 M5STACK\r\n  //\r\n  #define PWDN_GPIO_NUM     -1\r\n  #define RESET_GPIO_NUM    15\r\n  #define XCLK_GPIO_NUM     27\r\n  #define SIOD_GPIO_NUM     25\r\n  #define SIOC_GPIO_NUM     23\r\n  #define Y9_GPIO_NUM       19\r\n  #define Y8_GPIO_NUM       36\r\n  #define Y7_GPIO_NUM       18\r\n  #define Y6_GPIO_NUM       39\r\n  #define Y5_GPIO_NUM        5\r\n  #define Y4_GPIO_NUM       34\r\n  #define Y3_GPIO_NUM       35\r\n  #define Y2_GPIO_NUM       32\r\n  #define VSYNC_GPIO_NUM    22\r\n  #define HREF_GPIO_NUM     26\r\n  #define PCLK_GPIO_NUM     21\r\n  // M5 Stack status/illumination LED details unknown/unclear\r\n  // #define LED_PIN            x // Status led\r\n  // #define LED_ON          HIGH //\r\n  // #define LED_OFF          LOW //\r\n  // #define LAMP_PIN          x  // LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_M5STACK_V2_PSRAM)\r\n  //\r\n  // ESP32 M5STACK V2\r\n  //\r\n  #define PWDN_GPIO_NUM     -1\r\n  #define RESET_GPIO_NUM    15\r\n  #define XCLK_GPIO_NUM     27\r\n  #define SIOD_GPIO_NUM     22\r\n  #define SIOC_GPIO_NUM     23\r\n  #define Y9_GPIO_NUM       19\r\n  #define Y8_GPIO_NUM       36\r\n  #define Y7_GPIO_NUM       18\r\n  #define Y6_GPIO_NUM       39\r\n  #define Y5_GPIO_NUM        5\r\n  #define Y4_GPIO_NUM       34\r\n  #define Y3_GPIO_NUM       35\r\n  #define Y2_GPIO_NUM       32\r\n  #define VSYNC_GPIO_NUM    25\r\n  #define HREF_GPIO_NUM     26\r\n  #define PCLK_GPIO_NUM     21\r\n  // M5 Stack status/illumination LED details unknown/unclear\r\n  // #define LED_PIN            x // Status led\r\n  // #define LED_ON          HIGH //\r\n  // #define LED_OFF          LOW //\r\n  // #define LAMP_PIN          x  // LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_M5STACK_WIDE)\r\n  //\r\n  // ESP32 M5STACK WIDE\r\n  //\r\n  #define PWDN_GPIO_NUM     -1\r\n  #define RESET_GPIO_NUM    15\r\n  #define XCLK_GPIO_NUM     27\r\n  #define SIOD_GPIO_NUM     22\r\n  #define SIOC_GPIO_NUM     23\r\n  #define Y9_GPIO_NUM       19\r\n  #define Y8_GPIO_NUM       36\r\n  #define Y7_GPIO_NUM       18\r\n  #define Y6_GPIO_NUM       39\r\n  #define Y5_GPIO_NUM        5\r\n  #define Y4_GPIO_NUM       34\r\n  #define Y3_GPIO_NUM       35\r\n  #define Y2_GPIO_NUM       32\r\n  #define VSYNC_GPIO_NUM    25\r\n  #define HREF_GPIO_NUM     26\r\n  #define PCLK_GPIO_NUM     21\r\n  // M5 Stack status/illumination LED details unknown/unclear\r\n  // #define LED_PIN            x // Status led\r\n  // #define LED_ON          HIGH //\r\n  // #define LED_OFF          LOW //\r\n  // #define LAMP_PIN          x  // LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_M5STACK_ESP32CAM)\r\n  //\r\n  // Common M5 Stack without PSRAM\r\n  //\r\n  #define PWDN_GPIO_NUM     -1\r\n  #define RESET_GPIO_NUM    15\r\n  #define XCLK_GPIO_NUM     27\r\n  #define SIOD_GPIO_NUM     25\r\n  #define SIOC_GPIO_NUM     23\r\n  #define Y9_GPIO_NUM       19\r\n  #define Y8_GPIO_NUM       36\r\n  #define Y7_GPIO_NUM       18\r\n  #define Y6_GPIO_NUM       39\r\n  #define Y5_GPIO_NUM        5\r\n  #define Y4_GPIO_NUM       34\r\n  #define Y3_GPIO_NUM       35\r\n  #define Y2_GPIO_NUM       17\r\n  #define VSYNC_GPIO_NUM    22\r\n  #define HREF_GPIO_NUM     26\r\n  #define PCLK_GPIO_NUM     21\r\n  // Note NO PSRAM,; so maximum working resolution is XGA 1024Ã—768\r\n  // M5 Stack status/illumination LED details unknown/unclear\r\n  // #define LED_PIN            x // Status led\r\n  // #define LED_ON          HIGH //\r\n  // #define LED_OFF          LOW //\r\n  // #define LAMP_PIN          x  // LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_AI_THINKER)\r\n  //\r\n  // AI Thinker\r\n  // https://github.com/SeeedDocument/forum_doc/raw/master/reg/ESP32_CAM_V1.6.pdf\r\n  //\r\n  #define PWDN_GPIO_NUM     32\r\n  #define RESET_GPIO_NUM    -1\r\n  #define XCLK_GPIO_NUM      0\r\n  #define SIOD_GPIO_NUM     26\r\n  #define SIOC_GPIO_NUM     27\r\n  #define Y9_GPIO_NUM       35\r\n  #define Y8_GPIO_NUM       34\r\n  #define Y7_GPIO_NUM       39\r\n  #define Y6_GPIO_NUM       36\r\n  #define Y5_GPIO_NUM       21\r\n  #define Y4_GPIO_NUM       19\r\n  #define Y3_GPIO_NUM       18\r\n  #define Y2_GPIO_NUM        5\r\n  #define VSYNC_GPIO_NUM    25\r\n  #define HREF_GPIO_NUM     23\r\n  #define PCLK_GPIO_NUM     22\r\n  #define LED_PIN           33 // Status led\r\n  #define LED_ON           LOW // - Pin is inverted.\r\n  #define LED_OFF         HIGH //\r\n  #define LAMP_PIN           4 // LED FloodLamp.\r\n\r\n#elif defined(CAMERA_MODEL_TTGO_T_JOURNAL)\r\n  //\r\n  // LilyGO TTGO T-Journal ESP32; with OLED! but not used here.. :-(\r\n  #define PWDN_GPIO_NUM      0\r\n  #define RESET_GPIO_NUM    15\r\n  #define XCLK_GPIO_NUM     27\r\n  #define SIOD_GPIO_NUM     25\r\n  #define SIOC_GPIO_NUM     23\r\n  #define Y9_GPIO_NUM       19\r\n  #define Y8_GPIO_NUM       36\r\n  #define Y7_GPIO_NUM       18\r\n  #define Y6_GPIO_NUM       39\r\n  #define Y5_GPIO_NUM        5\r\n  #define Y4_GPIO_NUM       34\r\n  #define Y3_GPIO_NUM       35\r\n  #define Y2_GPIO_NUM       17\r\n  #define VSYNC_GPIO_NUM    22\r\n  #define HREF_GPIO_NUM     26\r\n  #define PCLK_GPIO_NUM     21\r\n  // TTGO T Journal status/illumination LED details unknown/unclear\r\n  // #define LED_PIN           33 // Status led\r\n  // #define LED_ON           LOW // - Pin is inverted.\r\n  // #define LED_OFF         HIGH //\r\n  // #define LAMP_PIN           4 // LED FloodLamp.\r\n\r\n#else\r\n  // Well.\r\n  // that went badly...\r\n  #error \"Camera model not selected, did you forget to uncomment it in myconfig?\"\r\n#endif\r\n\r\nstatic camera_config_t camera_config = {\r\n  .pin_pwdn = PWDN_GPIO_NUM,\r\n  .pin_reset = RESET_GPIO_NUM,\r\n  .pin_xclk = XCLK_GPIO_NUM,\r\n  .pin_sscb_sda = SIOD_GPIO_NUM,\r\n  .pin_sscb_scl = SIOC_GPIO_NUM,\r\n  .pin_d7 = Y9_GPIO_NUM,\r\n  .pin_d6 = Y8_GPIO_NUM,\r\n  .pin_d5 = Y7_GPIO_NUM,\r\n  .pin_d4 = Y6_GPIO_NUM,\r\n  .pin_d3 = Y5_GPIO_NUM,\r\n  .pin_d2 = Y4_GPIO_NUM,\r\n  .pin_d1 = Y3_GPIO_NUM,\r\n  .pin_d0 = Y2_GPIO_NUM,\r\n  .pin_vsync = VSYNC_GPIO_NUM,\r\n  .pin_href = HREF_GPIO_NUM,\r\n  .pin_pclk = PCLK_GPIO_NUM,  \r\n  .xclk_freq_hz = 10000000,        //XCLK 20MHz or 10MHz\r\n  .ledc_timer = LEDC_TIMER_0,\r\n  .ledc_channel = LEDC_CHANNEL_0,\r\n  .pixel_format = PIXFORMAT_JPEG,  //YUV422,GRAYSCALE,RGB565,JPEG\r\n  .frame_size = FRAMESIZE_UXGA,    //QQVGA-UXGA Do not use sizes above QVGA when not JPEG\r\n  .jpeg_quality = 13,              //0-63 lower number means higher quality\r\n  .fb_count = 1                    //if more than one, i2s runs in continuous mode. Use only with JPEG\r\n};\r\n\r\n\r\nint lampChannel = 7;           // a free PWM channel (some channels used by camera)\r\nconst int pwmfreq = 50000;     // 50K pwm frequency\r\nconst int pwmresolution = 9;   // duty cycle bit range\r\nconst int pwmMax = pow(2,pwmresolution)-1;\r\n\r\n\r\nstatic esp_err_t init_camera() {\r\n  //initialize the camera\r\n  Serial.print(\"Camera init... \");\r\n  esp_err_t err = esp_camera_init(&camera_config);\r\n\r\n  if (err != ESP_OK) {\r\n    delay(100);  // need a delay here or the next serial o/p gets missed\r\n    Serial.printf(\"\\n\\nCRITICAL FAILURE: Camera sensor failed to initialise.\\n\\n\");\r\n    Serial.printf(\"A full (hard, power off/on) reboot will probably be needed to recover from this.\\n\");\r\n    return err;\r\n  } else {\r\n    Serial.println(\"succeeded\");\r\n\r\n    // Get a reference to the sensor\r\n    sensor_t* s = esp_camera_sensor_get();\r\n\r\n    // Dump camera module, warn for unsupported modules.\r\n    switch (s->id.PID) {\r\n      case OV9650_PID: Serial.println(\"WARNING: OV9650 camera module is not properly supported, will fallback to OV2640 operation\"); break;\r\n      case OV7725_PID: Serial.println(\"WARNING: OV7725 camera module is not properly supported, will fallback to OV2640 operation\"); break;\r\n      case OV2640_PID: Serial.println(\"OV2640 camera module detected\"); break;\r\n      case OV3660_PID: Serial.println(\"OV3660 camera module detected\"); break;\r\n      default: Serial.println(\"WARNING: Camera module is unknown and not properly supported, will fallback to OV2640 operation\");\r\n    }\r\n  }\r\n  return ESP_OK;\r\n}\r\n"}}}Content-Length: 9101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/ESP32-CAM-adv.ino","languageId":"cpp","version":1,"text":"#include <WiFi.h>\r\n#include <FS.h>\r\n#include <SPIFFS.h>\r\n#include <AsyncTelegram2.h>\r\n#include \"esp_camera.h\"\r\n#include \"soc/soc.h\"           // Brownout error fix\r\n#include \"soc/rtc_cntl_reg.h\"  // Brownout error fix\r\n\r\n// Local include files\r\n#include \"camera_pins.h\"\r\n\r\n#define USE_SSLCLIENT true\r\n#if USE_SSLCLIENT\r\n#include <SSLClient.h>\r\n#include \"tg_certificate.h\"\r\nWiFiClient base_client;\r\nSSLClient client(base_client, TAs, (size_t)TAs_NUM, A0);\r\n#else\r\n#include <WiFiClientSecure.h>\r\nWiFiClientSecure client;\r\n#endif\r\n\r\n#define FILENAME_SIZE 25\r\n#define FORMAT_FS_IF_FAILED true\r\n#define DELETE_IMAGE true   // Set fault only if you have an SD or a very big flash memory.\r\n//#define USE_MMC true      // Define where store images (on board SD card reader or internal flash memory)\r\n\r\n#ifdef USE_MMC\r\n#include <SD_MMC.h>           // Use onboard SD Card reader\r\n#define FILESYSTEM SD_MMC\r\n#else\r\n#include <FFat.h>              // Use internal flash memory\r\n#define FILESYSTEM FFat        // Be sure to select the correct filesystem in IDE option \r\n#endif\r\n\r\nconst char* ssid = \"xxxxxxxxxxxx\";  // SSID WiFi network\r\nconst char* pass = \"xxxxxxxxxxxx\";  // Password  WiFi network\r\nconst char* token = \"xxxxxxxx:xxxxxxxxxxx-xxxxxxxxxxxxxxxxxxx\";\r\n\r\nAsyncTelegram2 myBot(client);\r\n\r\n// Timezone definition to get properly time from NTP server\r\n#define MYTZ \"CET-1CEST,M3.5.0,M10.5.0/3\"\r\n\r\n// Struct for saving time datas (needed for time-naming the image files)\r\nstruct tm timeinfo;\r\n\r\n// Just to check if everithing work as expected\r\nvoid printHeapStats() {\r\n  time_t now = time(nullptr);\r\n  struct tm tInfo = *localtime(&now);\r\n  static uint32_t infoTime;\r\n  if (millis() - infoTime > 10000) {\r\n    infoTime = millis();\r\n    Serial.printf(\"%02d:%02d:%02d - Total free: %6d - Max block: %6d\\n\",\r\n                  tInfo.tm_hour, tInfo.tm_min, tInfo.tm_sec, heap_caps_get_free_size(0), heap_caps_get_largest_free_block(0));\r\n  }\r\n}\r\n\r\n// List all files saved in the selected filesystem\r\nvoid listDir(const char * dirname, uint8_t levels) {\r\n  Serial.printf(\"Listing directory: %s\\r\\n\", dirname);\r\n  File root = FILESYSTEM.open(dirname);\r\n  if (!root) {\r\n    Serial.println(\"- failed to open directory\\n\");\r\n    return;\r\n  }\r\n  if (!root.isDirectory()) {\r\n    Serial.println(\" - not a directory\\n\");\r\n    return;\r\n  }\r\n  File file = root.openNextFile();\r\n  while (file) {\r\n    if (file.isDirectory()) {\r\n      Serial.printf(\"  DIR : %s\\n\", file.name());\r\n      if (levels)\r\n        listDir(file.name(), levels - 1);\r\n    }\r\n    else\r\n      Serial.printf(\"  FILE: %s\\tSIZE: %d\\n\", file.name(), file.size());\r\n    file = root.openNextFile();\r\n  }\r\n}\r\n\r\n// Lamp Control\r\nvoid setLamp(int newVal) {\r\n  if (newVal != -1) {\r\n    // Apply a logarithmic function to the scale.\r\n    int brightness = round((pow(2, (1 + (newVal * 0.02))) - 2) / 6 * pwmMax);\r\n    ledcWrite(lampChannel, brightness);\r\n    Serial.print(\"Lamp: \");\r\n    Serial.print(newVal);\r\n    Serial.print(\"%, pwm = \");\r\n    Serial.println(brightness);\r\n  }\r\n}\r\n\r\n\r\n// Send a picture taken from CAM to Telegram\r\nbool sendPicture(TBMessage* msg) {\r\n  // Path where new picture will be saved \"/YYYYMMDD_HHMMSS.jpg\"\r\n  char picturePath[FILENAME_SIZE];\r\n  getLocalTime(&timeinfo);\r\n  snprintf(picturePath, FILENAME_SIZE, \"/%02d%02d%02d_%02d%02d%02d.jpg\", timeinfo.tm_year + 1900,\r\n           timeinfo.tm_mon + 1, timeinfo.tm_mday, timeinfo.tm_hour, timeinfo.tm_min, timeinfo.tm_sec);\r\n\r\n  File file = FILESYSTEM.open(picturePath, \"w\");\r\n  if (!file) {\r\n    Serial.println(\"Failed to open file in writing mode\");\r\n    return false;\r\n  }\r\n  Serial.println(\"Capture Requested\");\r\n\r\n  // Take Picture with Camera;\r\n  setLamp(100);\r\n  camera_fb_t* fb = esp_camera_fb_get();\r\n  setLamp(0);\r\n  if (!fb) {\r\n    Serial.println(\"Camera capture failed\");\r\n    file.close();\r\n    FILESYSTEM.remove(picturePath);\r\n    return false;\r\n  }\r\n\r\n  file.write(fb->buf, fb->len);  // payload (image), payload length\r\n  file.close();\r\n  Serial.printf(\"Saved file to path: %s - %zu bytes\\n\", picturePath, fb->len);\r\n\r\n  // Open again in reading mode and send stream to AyncTelegram\r\n  file = FILESYSTEM.open(picturePath, \"r\");\r\n  myBot.sendPhotoByFile(msg->sender.id, &file, file.size());\r\n  file.close();\r\n  //If you don't need to keep image, delete from filesystem\r\n#if DELETE_IMAGE\r\n  FILESYSTEM.remove(picturePath);\r\n#endif\r\n  return true;\r\n}\r\n\r\n\r\n// This is the task for checking new messages from Telegram\r\nstatic void checkTelegram(void * args) {\r\n  while (true) {\r\n    // A variable to store telegram message data\r\n    TBMessage msg;\r\n    // if there is an incoming message...\r\n    if (myBot.getNewMessage(msg)) {\r\n      Serial.print(\"New message from chat_id: \");\r\n      Serial.println(msg.sender.id);\r\n      MessageType msgType = msg.messageType;\r\n\r\n      if (msgType == MessageText) {\r\n        // Received a text message\r\n        if (msg.text.equalsIgnoreCase(\"/takePhoto\")) {\r\n          Serial.println(\"\\nSending Photo from CAM\");\r\n          if (sendPicture(&msg))\r\n            Serial.println(\"Message sent\");\r\n        }\r\n        else {\r\n          Serial.print(\"\\nText message received: \");\r\n          Serial.println(msg.text);\r\n          String replyStr = \"Message received:\\n\";\r\n          replyStr += msg.text;\r\n          replyStr +=  \"\\nTry with /takePhoto\";\r\n          myBot.sendMessage(msg, replyStr);\r\n        }\r\n      }\r\n    }\r\n    yield();\r\n  }\r\n  // Delete this task on exit (should never occurs)\r\n  vTaskDelete(NULL);\r\n}\r\n\r\nvoid setup() {\r\n  WRITE_PERI_REG(RTC_CNTL_BROWN_OUT_REG, 0);       // disable brownout detector\r\n\r\n  pinMode(LAMP_PIN, OUTPUT);                       // set the lamp pin as output\r\n  ledcSetup(lampChannel, pwmfreq, pwmresolution);  // configure LED PWM channel\r\n  setLamp(0);                                      // set default value\r\n  ledcAttachPin(LAMP_PIN, lampChannel);            // attach the GPIO pin to the channel\r\n\r\n  Serial.begin(115200);\r\n  Serial.setDebugOutput(true);\r\n  Serial.println();\r\n\r\n  // Init filesystem\r\n#ifdef USE_MMC\r\n  if (!SD_MMC.begin( \"/sd\", false))\r\n    Serial.println(\"SD Card Mount Failed\");\r\n  if (SD_MMC.cardType() == CARD_NONE)\r\n    Serial.println(\"No SD Card attached\");\r\n#else\r\n  // Init filesystem (format if necessary)\r\n  if (!FILESYSTEM.begin(FORMAT_FS_IF_FAILED)) {\r\n    Serial.println(\"\\nFS Mount Failed.\\nFilesystem will be formatted, please wait.\");\r\n    FILESYSTEM.format();\r\n  }\r\n  uint32_t freeBytes =  FILESYSTEM.totalBytes() - FILESYSTEM.usedBytes();\r\n  Serial.printf(\"\\nTotal space: %10d\\n\", FILESYSTEM.totalBytes());\r\n  Serial.printf(\"Free space: %10d\\n\", freeBytes);\r\n#endif\r\n\r\n  listDir(\"/\", 0);\r\n\r\n  // Start WiFi connection\r\n  WiFi.begin(ssid, pass);\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println(\"\");\r\n  Serial.println(\"WiFi connected\");\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Sync time with NTP\r\n  configTzTime(MYTZ, \"time.google.com\", \"time.windows.com\", \"pool.ntp.org\");\r\n#if USE_SSLCLIENT == false\r\n  client.setCACert(telegram_cert);\r\n#endif\r\n\r\n  // Set the Telegram bot properies\r\n  myBot.setUpdateTime(1000);\r\n  myBot.setTelegramToken(token);\r\n\r\n  // Check if all things are ok\r\n  Serial.print(\"\\nTest Telegram connection... \");\r\n  myBot.begin() ? Serial.println(\"OK\") : Serial.println(\"NOK\");\r\n\r\n  // Send a welcome message to user when ready\r\n  char welcome_msg[64];\r\n  snprintf(welcome_msg, 64, \"BOT @%s online.\\nTry with /takePhoto command.\", myBot.getBotName());\r\n\r\n  // Check the userid with the help of bot @JsonDumpBot or @getidsbot (work also with groups)\r\n  // https://t.me/JsonDumpBot  or  https://t.me/getidsbot\r\n  int32_t userid = 436865110;\r\n  myBot.sendTo(userid, welcome_msg);\r\n\r\n  // Start telegram message checking in a separate task on core 0 (the loop() function run on core 1)\r\n  xTaskCreate(\r\n    checkTelegram,    // Function to implement the task\r\n    \"checkTelegram\",  // Name of the task\r\n    8192,             // Stack size in words\r\n    NULL,             // Task input parameter\r\n    1,                // Priority of the task\r\n    NULL             // Task handle.\r\n  );\r\n  \r\n  // Init the camera module (accordind the camera_config_t defined)\r\n  init_camera();\r\n}\r\n\r\nvoid loop() {\r\n  printHeapStats();\r\n}"}}}Content-Length: 304

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/camera_pins.h"},"range":{"start":{"line":248,"character":2},"end":{"line":248,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 234

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/ESP32-CAM-adv.ino"},"position":{"line":25,"character":33}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 234

{"jsonrpc":"
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 4608

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/camera_pins.h","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-fstrict-volatile-bitfields'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument_with_suggestion","source":"clang","message":"Unknown argument '-mlongcalls'; did you mean '-mlong-calls'?"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"drv_unknown_argument","source":"clang","message":"Unknown argument: '-mfix-esp32-psram-cache-issue'"},{"range":{"start":{"line":224,"character":7},"end":{"line":224,"character":22}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'camera_config_t'"},{"range":{"start":{"line":242,"character":16},"end":{"line":242,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDC_TIMER_0'"},{"range":{"start":{"line":243,"character":18},"end":{"line":243,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDC_CHANNEL_0'"},{"range":{"start":{"line":244,"character":18},"end":{"line":244,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'PIXFORMAT_JPEG'"},{"range":{"start":{"line":245,"character":16},"end":{"line":245,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'FRAMESIZE_UXGA'"},{"range":{"start":{"line":254,"character":19},"end":{"line":254,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pow'"},{"range":{"start":{"line":257,"character":7},"end":{"line":257,"character":16}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'esp_err_t'"},{"range":{"start":{"line":259,"character":2},"end":{"line":259,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":260,"character":2},"end":{"line":260,"character":11}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'esp_err_t'"},{"range":{"start":{"line":262,"character":13},"end":{"line":262,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ESP_OK'"},{"range":{"start":{"line":263,"character":4},"end":{"line":263,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"},{"range":{"start":{"line":264,"character":4},"end":{"line":264,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":265,"character":4},"end":{"line":265,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":268,"character":4},"end":{"line":268,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'sensor_t'"},{"range":{"start":{"line":271,"character":18},"end":{"line":271,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'esp_camera_sensor_get'"},{"range":{"start":{"line":275,"character":23},"end":{"line":275,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":276,"character":23},"end":{"line":276,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":277,"character":23},"end":{"line":277,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"code":"fatal_too_many_errors","source":"clang","message":"Too many errors emitted, stopping now"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/ESP32-CAM-adv.ino"},"position":{"line":25,"character":32}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 304

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/camera_pins.h"},"range":{"start":{"line":248,"character":2},"end":{"line":248,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/354","percentage":2.824858757062147,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 7821

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Dati/Cloud/Dropbox/ArduinoLibs/AsyncTelegram2/examples/ESP32/ESP32-CAM-adv/ESP32-CAM-adv.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'SSLClient'\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\SSLClient\\src\\SSLClient.h:96:14:\nnote: candidate constructor not viable: no known conversion from 'WiFiClient' to 'Client \u0026' for 1st argument\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\SSLClient\\src\\SSLClient.h:34:7:\nnote: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 4 were provided\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\SSLClient\\src\\SSLClient.h:34:7:\nnote: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 4 were provided"},{"range":{"start":{"line":39,"character":15},"end":{"line":39,"character":20}},"severity":1,"code":"ovl_no_viable_function_in_init","source":"clang","message":"No matching constructor for initialization of 'AsyncTelegram2'\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\AsyncTelegram2\\src\\AsyncTelegram2.h:74:7:\nnote: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'SSLClient' to 'const AsyncTelegram2' for 1st argument\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\AsyncTelegram2\\src\\AsyncTelegram2.h:79:5:\nnote: candidate constructor not viable: no known conversion from 'SSLClient' to 'Client \u0026' for 1st argument"},{"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":19}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'time'\n\n:53:18:\nnote: candidate function not viable: requires 0 arguments, but 1 was provided"},{"range":{"start":{"line":50,"character":21},"end":{"line":50,"character":30}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'localtime'\n\n:58:19:\nnote: candidate function not viable: requires 0 arguments, but 1 was provided"},{"range":{"start":{"line":62,"character":14},"end":{"line":62,"character":29}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'open'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:91:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:92:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument"},{"range":{"start":{"line":88,"character":28},"end":{"line":88,"character":31}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pow'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\tools\\sdk\\include\\newlib\\math.h:133:15:\nnote: candidate function not viable: requires 0 arguments, but 2 were provided"},{"range":{"start":{"line":88,"character":21},"end":{"line":88,"character":26}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'round'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\tools\\sdk\\include\\newlib\\math.h:278:15:\nnote: candidate function not viable: requires 0 arguments, but 1 was provided"},{"range":{"start":{"line":103,"character":2},"end":{"line":103,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'snprintf'\n\n:268:12:\nnote: candidate function not viable: requires 0 arguments, but 9 were provided"},{"range":{"start":{"line":106,"character":14},"end":{"line":106,"character":29}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'open'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:91:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:92:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument"},{"range":{"start":{"line":120,"character":4},"end":{"line":120,"character":21}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'remove'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:97:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:98:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument"},{"range":{"start":{"line":129,"character":9},"end":{"line":129,"character":24}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'open'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:91:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:92:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument"},{"range":{"start":{"line":130,"character":40},"end":{"line":130,"character":45}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a parameter of type 'Stream *' with an rvalue of type 'fs::File *'\n\nC:\\Users\\BAN_TAG\\Documents\\Arduino\\libraries\\AsyncTelegram2\\src\\AsyncTelegram2.h:181:59:\nnote: passing argument to parameter 'stream' here"},{"range":{"start":{"line":134,"character":2},"end":{"line":134,"character":19}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'remove'\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:97:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument\n\nC:\\Users\\BAN_TAG\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\1.0.6\\libraries\\FS\\src\\FS.h:98:10:\nnote: candidate function not viable: no known conversion from 'fs::F_Fat' to 'fs::FS' for object argument"},{"range":{"start":{"line":175,"character":2},"end":{"line":175,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to '__assert_func'\n\n:41:13:\nnote: candidate function not viable: requires 0 arguments, but 4 were provided"},{"range":{"start":{"line":231,"character":2},"end":{"line":231,"character":10}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'snprintf'\n\n:268:12:\nnote: candidate function not viable: requires 0 arguments, but 4 were provided"}]},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/354","percentage":3.1073446327683616,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/354","percentage":3.389830508474576,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/354","percentage":3.389830508474576,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/354","percentage":3.672316384180791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/354","percentage":3.672316384180791,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/354","percentage":3.9548022598870056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/354","percentage":3.9548022598870056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/354","percentage":4.237288135593221,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/354","percentage":4.237288135593221,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/354","percentage":4.519774011299435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/354","percentage":4.519774011299435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/354","percentage":4.80225988700565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/354","percentage":4.80225988700565,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/354","percentage":5.084745762711864,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/354","percentage":5.084745762711864,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/354","percentage":5.367231638418079,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/354","percentage":5.367231638418079,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/354","percentage":5.649717514124294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/354","percentage":5.649717514124294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/354","percentage":5.932203389830509,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/354","percentage":5.932203389830509,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/354","percentage":6.214689265536723,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/354","percentage":6.214689265536723,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/354","percentage":6.497175141242938,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/354","percentage":6.497175141242938,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/354","percentage":6.779661016949152,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/354","percentage":6.779661016949152,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/354","percentage":7.062146892655368,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/354","percentage":7.062146892655368,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/354","percentage":7.344632768361582,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/354","percentage":7.344632768361582,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/354","percentage":7.627118644067797,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/354","percentage":7.627118644067797,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/354","percentage":7.909604519774011,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/354","percentage":7.909604519774011,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/354","percentage":8.192090395480227,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/354","percentage":8.474576271186441,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/354","percentage":8.474576271186441,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/354","percentage":8.757062146892656,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/354","percentage":9.03954802259887,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/354","percentage":9.03954802259887,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/354","percentage":9.322033898305085,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/354","percentage":9.6045197740113,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/354","percentage":9.6045197740113,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/354","percentage":9.887005649717514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/354","percentage":10.169491525423728,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/354","percentage":10.451977401129943,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/354","percentage":10.451977401129943,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"38/354","percentage":10.734463276836157,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"39/354","percentage":11.016949152542374,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/354","percentage":11.299435028248588,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"40/354","percentage":11.299435028248588,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/354","percentage":11.581920903954803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"41/354","percentage":11.581920903954803,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/354","percentage":11.864406779661017,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"42/354","percentage":11.864406779661017,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/354","percentage":12.146892655367232,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"43/354","percentage":12.146892655367232,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/354","percentage":12.429378531073446,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"44/354","percentage":12.429378531073446,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/354","percentage":12.711864406779661,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"45/354","percentage":12.711864406779661,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/354","percentage":12.994350282485875,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"46/354","percentage":12.994350282485875,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/354","percentage":13.27683615819209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"47/354","percentage":13.27683615819209,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/354","percentage":13.559322033898304,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"48/354","percentage":13.559322033898304,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/354","percentage":13.841807909604519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"49/354","percentage":13.841807909604519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/354","percentage":14.124293785310735,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"50/354","percentage":14.124293785310735,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/354","percentage":14.40677966101695,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"51/354","percentage":14.40677966101695,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/354","percentage":14.689265536723164,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"52/354","percentage":14.689265536723164,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/354","percentage":14.971751412429379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"53/354","percentage":14.971751412429379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/354","percentage":15.254237288135593,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"54/354","percentage":15.254237288135593,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/354","percentage":15.536723163841808,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"55/354","percentage":15.536723163841808,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/354","percentage":15.819209039548022,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"56/354","percentage":15.819209039548022,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"57/354","percentage":16.10169491525424,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/354","percentage":16.384180790960453,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"58/354","percentage":16.384180790960453,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/354","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"59/354","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"60/354","percentage":16.949152542372882,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":5,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}
>>>
Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"61/354","percentage":17.231638418079097,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"62/354","percentage":17.51412429378531,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 161

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"63/354","percentage":17.796610169491526,"kind":"report"}},"jsonrpc":"2.0"}